openapi: 3.0.0
servers:
  - url: https://crossdocking-staging.todovaapp.cl/v1
    description: Staging server
  - url: https://crossdocking.todovaapp.cl/v1
    description: Production server
info:
  version: 1.0.0
  description: |
    # Introduction
    This is a guide and documentation to developers who wants to use the Chazki Chile system's crossdocking features.
    ## Disclaimer
    <span style="color:red">This API is deprecated, without support for bugs or new features.</span>

  # version: 1.0.0
  title: Maximo API
  # contact:
  #   name: API Support
  #   email: apiteam@swagger.io
  #   url: https://github.com/Redocly/redoc
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: Enterprise
    description: Everything about enterprises
  - name: Packages
    description: Everything about packages
  - name: Warehouses
    description: Everything about Chazki warehouses
  # - name: Webhook
  #   description: |
  #     If you need/want to receive information about package status in real time, the webhook technology is that you need.

  #     <div
  #       style="
  #         color: #8a6d3b;
  #         background-color: #fcf8e3;
  #         border-color: #bce8f1;
  #         padding: 15px;
  #         margin-bottom: 20px;
  #         border: 1px solid transparent;
  #         border-radius: 4px;"
  #     >
  #       For configuring your <code>webhookUrl</code>, it is necessary to email us to
  #       <a href="https://crossdocking-staging.todovaapp.cl/v1" target="_blank">random@email.cl</a>
  #     </div>
  - name: AddressInfoModel
    x-displayName: AddressInfo
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/AddressInfo" />
  - name: DepotModel
    x-displayName: Depot
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Depot" />
  - name: WarehouseModel
    x-displayName: Warehouse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Warehouse" />
  - name: PackageModel
    x-displayName: Package
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Package" />
  - name: ContactPersonModel
    x-displayName: ContactPerson
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ContactPerson" />
  - name: ImageModel
    x-displayName: Image
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Image" />
  - name: ActionModel
    x-displayName: Action
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Action" />
  - name: EnterpriseModel
    x-displayName: Enterprise
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Enterprise" />
x-tagGroups:
  - name: General
    tags:
      - Enterprise
      - Package
      - Warehouse
  - name: Webhooks
    tags:
      - Webhook
  - name: Models
    tags:
      # - AddressInfoModel
      - DepotModel
      - WarehouseModel
      - PackageModel
      # - ContactPersonModel
      # - ImageModel
      # - ActionModel
      - EnterpriseModel
paths:
  /cloud/depots/{apiKey}/{roleKey}:
    get:
      tags:
        - Enterprise
      summary: Get depots
      description: Get all the depots of one enterprise.
      operationId: getDepots
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/RoleKey'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Successful'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Depot'
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
  /cloud/packages/estimate-price/{apiKey}/{roleKey}:
    post:
      tags:
        - Package
      summary: Estimate price using package sizes
      description: Estimate price using the size of the packages.
      operationId: estimatePrice
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/RoleKey'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                packages:
                  description: 'Quantity and size of each package'
                  type: array
                  items:
                    type: object
                    properties:
                      productSize:
                        description: 'This attribute can receive the following values in uppercase or lowercase: `S`, `M`, `L` and `XL`'
                        type: string
                        example: 'S'
                      productQty:
                        type: number
                        format: integer
                        example: 2
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Successful'
                  data:
                    type: object
                    properties:
                      estimatePrice:
                        type: number
                        format: integer
                        example: 5950
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
  /cloud/packages/{packageId}/{apiKey}/{roleKey}:
    get:
      tags:
        - Package
      summary: Get package
      description: Get one package by ID
      operationId: getPackageById
      parameters:
        - $ref: '#/components/parameters/PackageId'
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/RoleKey'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Successful'
                  data:
                    $ref: '#/components/schemas/Package'
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
  /cloud/packages/create-many/{apiKey}/{roleKey}:
    post:
      tags:
        - Package
      summary: Create many packages
      description: Create many packages
      operationId: createManyPackages
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/RoleKey'
      requestBody:
        $ref: '#/components/requestBodies/CreateManyPackages'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Successful'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Package'
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
  /cloud/packages/nintendo/create:
    post:
      tags:
        - Package
      summary: Create packages as Nintendo
      description: 'This endpoint allows you to create orders in MAXIMO (current system) with the NINTENDO structure (new system). After migration, you can choose to push directly to the new system by changing the service URL and some minor changes to the body, the following fields will need to be removed from the body: warehouseId and roleKey. The value of enterpriseKey will be changed after migration.'
      operationId: createNintendoManyPackages
      requestBody:
        $ref: '#/components/requestBodies/CreateNintendoManyPackages'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: bool
                    example: true
                  ordersWithErrors:
                    type: int
                    example: 0
                  ordersWithoutErrors:
                    type: int
                    example: 1
        400:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    example: Server Internal Error
                  errors:
                    type: object
                    example: {
                      "type": "Error General",
                      "message": "invalid input: \"92d0c8de-d5ad-4488-ac57x-69925fc46056\""
                    }
  /cloud/packages/cancel/{packageId}/{apiKey}/{roleKey}:
    patch:
      tags:
        - Package
      summary: Cancel package
      description: Cancel one package by ID
      operationId: cancelPackage
      parameters:
        - $ref: '#/components/parameters/PackageId'
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/RoleKey'
      requestBody:
        $ref: '#/components/requestBodies/CancelPackage'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Successful'
                  data:
                    type: string
                    example: ''
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
  /cloud/warehouses/{apiKey}/{roleKey}:
    get:
      tags:
        - Warehouse
      summary: Get warehouses
      description: Get all the Chazki warehouses
      operationId: getOwnedWarehouses
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/RoleKey'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Successful'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Warehouse'
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
  /{webhookUrl}/{state}:
    event:
      tags:
        - Webhook
      summary: Get depots
      description: Get all the depots of one enterprise.
      operationId: getDepots
      parameters:
        - $ref: '#/components/parameters/ApiKey'
        - $ref: '#/components/parameters/RoleKey'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Successful'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Depot'
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
components:
  parameters:
    PackageId:
      in: path
      name: "packageId"
      description: "ID of the package that you want to get"
      required: true
      schema:
        type: string
        example: "601570ffe0f18cc238de813f"
    ApiKey:
      in: path
      name: "apiKey"
      description: "Your api key as enterprise"
      required: true
      schema:
        type: string
        example: "bz1oah290g8hp53h2pq9"
    RoleKey:
      in: path
      name: "roleKey"
      description: "Your role key as enterprise"
      required: true
      schema:
        type: string
        example: "b0av4ith0g8mp1tr9q93"
  schemas:
    AddressInfo:
      description: 'Address information'
      type: object
      properties:
        fullname:
          description: 'Full depot address'
          type: string
          example: 'Huelen, Cerro Navia, Región Metropolitana, Chile'
        h3:
          description: 'H3 related to the depot address'
          type: string
          example: '87eee459effffff'
        shortname:
          description: 'Short depot address'
          type: string
          example: 'Huelen'
        street:
          description: 'The street where is located the depot address'
          type: string
          example: 'Huelen'
        number:
          description: 'Number of the street'
          type: number
          format: integer
          example: 3431
        country:
          description: 'The country where is located the depot address'
          type: string
          example: 'CL'
        municipality:
          description: 'The commune where is located the depot address'
          type: string
          example: 'Cerro Navia'
        province:
          description: 'The city where is located the depot address'
          type: string
          example: 'Santiago'
        location:
          description: 'Coordinates related to the depot address [LNG, LAT]'
          type: object
          properties:
            type:
              type: string
              example: 'Point'
            coordinates:
              type: array
              items:
                type: number
                format: double
                length: 2
              example: [-70.7405924, -33.4214201]
    Depot:
      description: 'Origin enterprise depot'
      type: object
      properties:
        name:
          type: string
          example: 'nombre de la bodega'
          description: 'Depot name'
        description:
          type: string
          example: 'descripción de la bodega'
          description: 'Depot description'
        contactPerson:
          $ref: '#/components/schemas/ContactPerson'
        addressInfo:
          $ref: '#/components/schemas/AddressInfo'
    Package:
      type: object
      properties:
        id:
          description: 'Package ID'
          type: string
          example: '601570ffe0f18cc238de813f'
        enterpriseId:
          description: 'ID of the enterprise who owns the package'
          type: string
          example: '5b4dec48cd811a00014b02d0'
        warehouseId:
          description: 'ID of the Chazki warehouse where will arrive'
          type: string
          example: '5fe4b142ed6cc2af9bf82d7b'
        shipmentId:
          description: 'ID of the shipment that will deliver the package'
          type: string
          example: '601570ffe0f18d2238de813a'
        warehouseLocation:
          description: 'The location where is the package in our warehouse'
          type: string
          example: 'a345'
        inputSource:
          description: 'The way of how Chazki received the package'
          type: string
          example: 'csv'
        invoiceNumber:
          description: 'Invoice number of the package. If there is more than one package with the same `originalInvoiceNumber` this value will have a suffix separated by a dash'
          type: string
          example: '13345-1'
        originalInvoiceNumber:
          description: 'Invoice number of the package'
          type: string
          example: '13345'
        productName:
          description: 'Name of the product'
          type: string
          example: 'CAJA'
        productDescription:
          description: 'Description of the product'
          type: string
          example: ''
        productWeight:
          description: 'Weight of the product'
          type: number
          format: float
          example: 12.1
        productSize:
          description: 'Size of the product'
          type: string
          example: 'S'
        productVolume:
          description: 'Volume of the product'
          type: string
          format: float
          example: 2.3
        productQty:
          description: 'Quantity of products'
          type: number
          format: integer
          example: 1
        ifUnDeliveredOwnSelf:
          description: 'Set true if driver need to return package in case failed to deliver package'
          type: boolean
          example: false
        packageType:
          description: 'Type of package'
          type: string
          example: 'normal-logistic'
        state:
          description: 'Current state of the package'
          type: string
          example: 'canceled_by_customer'
        withdrawalDate:
          description: 'Withdraw date of the package'
          type: string
          example: '2021-01-20T05:00:00Z'
        deliveryDate:
          description: 'Delivery date of the package'
          type: string
          example: '2021-01-20T05:00:00Z'
        metadata:
          description: 'Extra data. If you need to add some data for your system like AUTH, use this field'
          type: object
          example: null
        createdAt :
          description: 'Creation date of the package'
          type: string
          example: '2021-01-30T14:45:19.889Z'
        updatedAt:
          description: 'Last update date of the package'
          type: string
          example: '2021-04-04T17:37:40.256Z'
        actionHistory:
          description: 'All the states of the package'
          type: array
          items:
            $ref: '#/components/schemas/Action'
        receiverContact:
          $ref: '#/components/schemas/ContactPerson'
        packageReceiver:
          $ref: '#/components/schemas/ReceiverInfo'
        dropoffInfo:
          $ref: '#/components/schemas/DropoffInfo'
        depotOrigin:
          $ref: '#/components/schemas/Depot'
        enterprise:
          $ref: '#/components/schemas/Enterprise'
        ownedWarehouse:
          $ref: '#/components/schemas/Warehouse'
    PackageWebhook:
      type: object
      properties:
        id:
          description: 'Package ID'
          type: string
          example: '601570ffe0f18cc238de813f'
        enterpriseId:
          description: 'ID of the enterprise who owns the package'
          type: string
          example: '5b4dec48cd811a00014b02d0'
        warehouseId:
          description: 'ID of the Chazki warehouse where will arrive'
          type: string
          example: '5fe4b142ed6cc2af9bf82d7b'
        shipmentId:
          description: 'ID of the shipment that will deliver the package'
          type: string
          example: '601570ffe0f18d2238de813a'
        warehouseLocation:
          description: 'The location where is the package in our warehouse'
          type: string
          example: 'a345'
        inputSource:
          description: 'The way of how Chazki received the package'
          type: string
          example: 'csv'
        invoiceNumber:
          description: 'Invoice number of the package. If there is more than one package with the same `originalInvoiceNumber` this value will have a suffix separated by a dash'
          type: string
          example: '13345-1'
        originalInvoiceNumber:
          description: 'Invoice number of the package'
          type: string
          example: '13345'
        productName:
          description: 'Name of the product'
          type: string
          example: 'CAJA'
        productDescription:
          description: 'Description of the product'
          type: string
          example: ''
        productWeight:
          description: 'Weight of the product'
          type: number
          format: float
          example: 12.1
        productSize:
          description: 'Size of the product'
          type: string
          example: 'S'
        productVolume:
          description: 'Volume of the product'
          type: string
          format: float
          example: 2.3
        productQty:
          description: 'Quantity of products'
          type: number
          format: integer
          example: 1
        ifUnDeliveredOwnSelf:
          description: 'Set true if driver need to return package in case failed to deliver package'
          type: boolean
          example: false
        packageType:
          description: 'Type of package'
          type: string
          example: 'normal-logistic'
        state:
          description: 'Current state of the package'
          type: string
          example: 'canceled_by_customer'
        withdrawalDate:
          description: 'Withdraw date of the package'
          type: string
          example: '2021-01-20T05:00:00Z'
        deliveryDate:
          description: 'Delivery date of the package'
          type: string
          example: '2021-01-20T05:00:00Z'
        metadata:
          description: 'Extra data. If you need to add some data for your system like AUTH, use this field'
          type: object
          example: null
        createdAt :
          description: 'Creation date of the package'
          type: string
          example: '2021-01-30T14:45:19.889Z'
        updatedAt:
          description: 'Last update date of the package'
          type: string
          example: '2021-04-04T17:37:40.256Z'
        actionHistory:
          description: 'All the states of the package'
          type: array
          items:
            $ref: '#/components/schemas/Action'
        receiverContact:
          $ref: '#/components/schemas/ContactPerson'
        packageReceiver:
          $ref: '#/components/schemas/ReceiverInfo'
        dropoffInfo:
          $ref: '#/components/schemas/DropoffInfo'
        depotOrigin:
          $ref: '#/components/schemas/Depot'
    DropoffInfo:
      description: 'Dropoff info of the package'
      type: object
      properties:
        originalFullname:
          type: string
          example: 'Pasaje Catipay 465 MAIPU'
        fullname:
          description: 'Full depot address'
          type: string
          example: 'Catipay 465, Maipú, Región Metropolitana, Chile'
        h3:
          description: 'H3 related to the depot address'
          type: string
          example: '87b2c540dffffff'
        shortname:
          description: 'Short depot address'
          type: string
          example: 'Catipay 465, Maipú, Región Metropolitana, Chile'
        street:
          description: 'The street where is located the depot address'
          type: string
          example: 'Catipay'
        number:
          description: 'Number of the street'
          type: number
          format: integer
          example: 465
        country:
          description: 'The country where is located the depot address'
          type: string
          example: 'CL'
        municipality:
          description: 'The commune where is located the depot address'
          type: string
          example: 'Maipú'
        province:
          description: 'The city where is located the depot address'
          type: string
          example: 'Santiago'
        region:
          description: 'The region where is located the depot address'
          type: string
          example: 'Región Metropolitana'
        location:
          description: 'Coordinates related to the depot address'
          type: object
          properties:
            type:
              type: string
              example: 'Point'
            coordinates:
              type: array
              items:
                type: number
                format: double
                length: 2
              example: [-70.7405924, -33.4214201]
    ContactPerson:
      description: 'Contact person information'
      type: object
      properties:
        name:
          type: string
          example: 'Foo Bar'
          description: 'Contact person name'
        phone:
          type: string
          example: '56123456789'
          description: 'Contact person phone'
        email:
          type: string
          example: 'foo@bar.cl'
          description: 'Contact person email'
        rut:
          type: string
          example: '13001067-9'
          description: 'Contact person RUT'
    ReceiverInfo:
      description: 'Receiver info of the package'
      type: object
      properties:
        name:
          type: string
          example: 'Foo Bar'
          description: 'Contact person name'
        phone:
          type: string
          example: '56123456789'
          description: 'Contact person phone'
        email:
          type: string
          example: 'foo@bar.cl'
          description: 'Contact person email'
        rut:
          type: string
          example: '13001067-9'
          description: 'Contact person RUT'
        supportImages:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    Image:
      type: object
      properties:
        imageType:
          type: string
          example: 'other_image'
        imageUrl:
          type: string
          example: 'https://todovadocs.s3.sa-east-1.amazonaws.com/docs/other_image.jpeg'
    Action:
      type: object
      properties:
        action:
          description: 'State type of the package'
          type: string
          example: 'created'
        time:
          description: 'Date when was changed to the state'
          type: string
          example: '2021-01-30T14:45:19.889Z'
        whichParticularUser:
          description: 'User responsible for changing status'
          type: object
          properties:
            userId:
              description: 'The user ID'
              type: string
              example: '5faaa770c5686640f8319cec'
            userType:
              description: 'The user type'
              type: string
              example: 'admin'
            firstname:
              description: 'First name of the user'
              type: string
              example: 'Foo'
            lastname:
              description: 'Last name of the user'
              type: string
              example: 'Bar'
            email:
              description: 'Email of the user'
              type: string
              example: 'foo@bar.cl'
    Enterprise:
      description: 'The enterprise that owns the package'
      type: object
      properties:
        id:
          description: 'ID of the enterprise'
          type: string
          example: '5b4dec48cd811a00014b02d0'
        rut:
          description: 'RUT of the enterprise'
          type: string
          example: '8214717-9'
        name:
          description: 'Name of the enterprise'
          type: string
          example: 'enterprise name'
        phone:
          description: 'Phone of the enterprise'
          type: string
          example: '56223456780'
        depots:
          description: 'All the depots that the enterprise has'
          type: array
          items:
            $ref: '#/components/schemas/Depot'
        crossdockingEnabled:
          description: 'If the enterprise has crossdocking enabled or not'
          type: boolean
          example: true
        createdAt:
          description: 'Creation date of the enterprise'
          type: string
          example: '2018-07-17T13:16:56.974Z'
        updatedAt:
          description: 'Last update date of the enterprise'
          type: string
          example: '2021-04-06T14:45:59.734Z'
    Warehouse:
      description: 'Chazki warehouse'
      type: object
      properties:
        id:
          description: 'ID of the warehouse'
          type: string
          example: '5b4dec48cd811a00014b02d0'
        totalArea:
          description: 'Total area of the warehouse'
          type: number
          format: integer
          example: 50
        totalVolume:
          description: 'Total volume of the warehouse'
          type: number
          format: integer
          example: 150
        createdAt:
          description: 'Creation date of the warehouse'
          type: string
          example: '2020-12-24T11:59:54.791Z'
        updateAt:
          description: 'Last update date of the warehouse'
          type: string
          example: '2020-12-24T11:59:54.791Z'
        depot:
          description: 'Depot information'
          type: object
          properties:
            name:
              type: string
              example: 'nombre de la bodega'
              description: 'Depot name'
            description:
              type: string
              example: 'descripción de la bodega'
              description: 'Depot description'
            contactPerson:
              $ref: '#/components/schemas/ContactPerson'
            addressInfo:
              $ref: '#/components/schemas/AddressInfo'
    PersonInfo:
      description: 'Contact person information'
      type: object
      properties:
        name:
          type: string
          example: 'Foo Bar'
          description: 'Contact person name'
        phone:
          type: string
          example: '56123456789'
          description: 'Contact person phone'
        email:
          type: string
          example: 'foo@bar.cl'
          description: 'Contact person email'
    CreateNintendoManyPackagesPayload:
      type: object
      properties:
        trackCode:
          description: 'Invoice number or track code of order '
          type: string
          example: '5fe4b142ed6cc2af9bf82d7b'
        paymentMethodID:
          description: 'payment method, for Maximo set value as "PAGADO"'
          type: string
          example: 'PAGADO'
        paymentProofID:
          description: 'Proof payment, for Maximo set value as "FACTURA"'
          type: string
          example: 'PAGADO'
        serviceID:
          description: 'Service code, set as "normal-logistic". After migration to Nintendo set as "REGULAR" '
          type: string
          example: 'normal-logistic'
        packageEnvelope:
          description: 'Package envelope '
          type: string
          example: 'CAJA'
        packageWeight:
          description: 'Package weight '
          type: float
          example: 0.3
        packageSizeID:
          description: 'Package size  (S, M, L , XL) '
          type: string
          example: 'S'
        packageQuantity:
          description: 'Package quantity '
          type: integer
          example: 1
        productDescription:
          description: 'Package description '
          type: string
          example: 'Caja de Bombones'
        productPrice:
          description: 'Product price  '
          type: float
          example: '2999.0'
        reverseLogistic:
          description: 'Reverse logistic, unavailable in Maximo system, set as "no"  '
          type: string
          example: 'no'
        crossdocking:
          description: 'Nintendo provides cross docking service, before migration set as "no" '
          type: string
          example: 'no'
        pickUpBranchID:
          description: 'After migration you can know the IDs of your depots, set as empty string for now '
          type: string
          example: ''
        pickUpAddress:
          description: 'Depot full address '
          type: string
          example: 'TERCERA CERRADA DE MINAS 501, ARVIDE, ALVARO OBREGON'
        pickUpPostalCode:
          description: 'Depot postal code'
          type: string
          example: '9080000'
        pickUpAddressReference:
          description: 'Depot address reference, before migration send street '
          type: string
          example: ''
        pickUpPrimaryReference:
          description: 'Depot district  '
          type: string
          example: ''
        pickUpSecondaryReference:
          description: 'Depot province  '
          type: string
          example: ''
        pickUpPoint:
          description: 'Depot coords array in specific order [latitude, longitude] '
          type: array
          example: [-33.4214201,-70.7405924]
        pickUpNotes:
          description: 'Additional info for pick up, before migration send address number  '
          type: string
          example: '501'
        pickUpContactName:
          description: 'Depot person name '
          type: string
          example: '5Alejandro Padilla'
        pickUpContactPhone:
          description: 'Depot person phone '
          type: string
          example: '56123456789'
        pickUpContactDocumentTypeID:
          description: 'Depot person document type, set as RUT for Chile '
          type: string
          example: 'RUT'
        pickUpContactDocumentNumber:
          description: 'Depot person document number '
          type: string
          example: '56123456789'
        pickUpContactEmail:
          description: 'Depot person email '
          type: string
          example: 'a@a.com'
        dropBranchID:
          description: 'If the delivery is to a known depot, you can send ID, before the migration send as empty string. '
          type: string
          example: ''
        dropAddress:
          description: 'Drop off full address '
          type: string
          example: 'Apolo XIÍI, Cerro Navia 1508, Región Metropolitana, Chile'
        dropPostalCode:
          description: 'Drop off postal code '
          type: string
          example: '9080000'
        dropAddressReference:
          description: 'Dro off address reference, before migration send street '
          type: string
          example: ''
        dropPrimaryReference:
          description: 'Drop off district '
          type: string
          example: 'Cerro Navia'
        dropSecondaryReference:
          description: 'Drop off province '
          type: string
          example: 'Región Metropolitana'
        dropPoint:
          description: 'Drop off coords array in specific order [latitude, longitude] '
          type: array
          example: [-33.4221627,-70.7406019]
        dropNotes:
          description: 'Additional info for drop off, send address number '
          type: string
          example: '1508'
        dropContactName:
          description: 'Drop off person name '
          type: string
          example: 'Oscar eduardo DeAquino Plata'
        dropContactPhone:
          description: 'Drop off person phone '
          type: string
          example: '56123456789'
        dropContactDocumentTypeID:
          description: 'Drop off person document type, set as RUT for Chile'
          type: string
          example: 'RUT'
        dropContactDocumentNumber:
          description: 'Drop off person document number '
          type: string
          example: '56123456789'
        dropContactEmail:
          description: 'Drop off person email '
          type: string
          example: 'a@a.com'

    CreateManyPackagesPayload:
      type: object
      properties:
        warehouseId:
          description: 'ID of the Chazki warehouse that will receive the package'
          type: string
          example: '5fe4b142ed6cc2af9bf82d7b'
        invoiceNumber:
          description: 'Invoice number of the package'
          type: string
          example: '13345'
        productName:
          description: 'Product name'
          type: string
          example: 'CAJA'
        productDescription:
          description: 'Product description'
          type: string
          example: ''
        productWeight:
          description: 'Product weight'
          type: number
          format: float
          example: 12.1
        productSize:
          description: 'Product size'
          type: string
          example: 'S'
        productQty:
          description: 'Product quantity'
          type: number
          format: integer
          example: 1
        ifUnDeliveredOwnSelf:
          description: 'Set true if driver need to return package in case failed to deliver package'
          type: boolean
          example: false
        packageType:
          description: 'Package type'
          type: string
          example: 'normal-logistic'
        withdrawalDate:
          description: 'Withdraw date'
          type: string
          example: '2021-01-20T05:00:00Z'
        deliveryDate:
          description: 'Delivery date'
          type: string
          example: '2021-01-20T05:00:00Z'
        receiverContact:
          $ref: '#/components/schemas/PersonInfo'
        packageReceiver:
          $ref: '#/components/schemas/PersonInfo'
        dropoffInfo:
          $ref: '#/components/schemas/AddressInfo'
        depotOrigin:
          $ref: '#/components/schemas/Depot'
    CancelPackagePayload:
      type: object
      properties:
        reason:
          description: 'Reason why was cancelled the package'
          type: string
          example: 'why was cancelled'
  requestBodies:
    CreateManyPackages:
      description: ''
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              packages:
                type: array
                items:
                  $ref: '#/components/schemas/CreateManyPackagesPayload'
    CreateNintendoManyPackages:
      description: ''
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              enterpriseKey:
                description: 'Your api key as enterprise. This value can be changed after migration.'
                type: string
                example: 'bccrkaop3n84fh8t92q0'
              warehouseId:
                description: 'ID of the Chazki warehouse that will receive the package. This field must be removed on migration.'
                type: string
                example: '5fe4b142ed6cc2af9bf82d7b'
              roleKey:
                description: 'Your role key as enterprise. This field must be removed on migration.'
                type: string
                example: 'bccrkaop3n84fh8t92q0'
              orders:
                type: array
                items:
                  $ref: '#/components/schemas/CreateNintendoManyPackagesPayload'
    CancelPackage:
      description: ''
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CancelPackagePayload'
    Error400:
      description: 'Bad request'
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 'error'
              message:
                type: string
                example: 'Error message (why was a bad request)'
              data:
                type: object
    Error404:
      description: 'Not found'
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 'error'
              message:
                type: string
                example: 'Error message (why was not found)'
              data:
                type: object
x-webhooks:
  updateState:
    get:
      summary: Webhook Receive
      description: |
        If you need/want to receive information about package status in real time, the webhook technology is that you need.

        <div
          style="
            color: #8a6d3b;
            background-color: #fcf8e3;
            border-color: #bce8f1;
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-radius: 4px;"
        >
          For configuring your <code>webhookUrl</code>, it is necessary send an email to Chazki
        </div>

        Once your api url is configured in the Chazki system, every
        time the status of a package has changed, you should receive
        an http request from our system, which will contain the
        latest information for the package.

        ### Package states

        | State                   | Description                                |
        | :---------------------: | ----------------------------------------------------------------------- |
        |  to_witndrawal          | The package will be withdrawn                                           |
        |  to_assign_location     | The package is being located in our warehouse                           |
        |  warehouse_queue_up     | The package is in our warehouse and has an incidence                    |
        |  returning_to_customer  | The package is returning to customer                                    |
        |  returned_to_customer   | The package was returned to customer                                    |
        |  warehouse_stored       | The package was stored in our warehouse                                 |
        |  queued_up              | The package was assigned to one shipment and is waiting to be delivered |
        |  dispatched             | The package was dispatched and it's ready to start the shipment         |
        |  shipping_initiated     | The package started to be delivered                                     |
        |  failed_at_reception    | The package failed at reception                                         |
        |  discarded_at_reception | The package was discarded at reception                                  |
        |  inventory_queue_up     | The package is in inventory and has an incidence                        |
        |  failed_and_returned    | The package failed and was returned                                     |
        |  delivered_liquidated   | The package delivery has been confirmed                                               |
        |  cancelled_by_customer  | The package was cancelled by customer                                   |
        |  at_dropoff             | The package has arrived to its drop off point                           |
        |  delivered              | The package was delivered successfully                                  |
        |  failed_to_deliver      | The package failed and couldn't be delivered                            |

        ### Chazki HTTP Request

        `POST {webhookUrl}/:state`

      operationId: updateState
      tags:
        - Webhook
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageWebhook'
        400:
          $ref: '#/components/requestBodies/Error400'
        404:
          $ref: '#/components/requestBodies/Error404'
